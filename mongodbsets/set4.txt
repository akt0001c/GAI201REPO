q1::Write a query to find the ride with the highest and lowest fare.
Ans::db.Rides.aggregate([
    {
        $group:{
            _id:null,
            "highest_fare":{$max :"$fare" },
            "lowest_fare":{$min:"$fare"}
        }
    }
])

q2:: Write a query to find the average fare and distance for each driver_id.
Ans:: db.Rides.aggregate([
    {
        $group:{
            _id:"driver_id",
            "avg_fare":{$avg:"$fare"},
            "avg_distance":{$avg:"$distance"}
        }
    }
])

q3::Write a query to find driver_id that have completed more than 5 rides.
Ans:: db.Rides.aggregate([
    {
    $group:{
        _id:"driver_id",
        "rides_count":{ $sum :1}
       }
    },
     {
    $match:{
        "rides_count":{$gt:5}
        }
     }
]) 

db.Drivers.insertMany(
    [
        {
             "_id":100,
             "name":"Aashutosh",
        },
        {
            "_id":102,
            "name":"Sohan"
        },
        {
             "_id":103,
              "name":"Rohan"
        },
        {
             "_id":104,
              "name":"Kumar",
        },
        {
             "_id":105,
              "name":"Kamal",
        },
    ]
)



q4:: Assuming there is another collection/table called Drivers with driver_id and name fields, write a query to find the name of the driver with the highest fare.
Ans:: db.Rides.aggregate(
    [
        {
            $lookup:{
                from:"Drivers",
                localField:"driver_id",
                foreignField:"_id",
                as:"driversDetails"
            }
        },
        {
            $unwind:"$driversDetails"
            
        },
        {
           $sort{
            "fare": -1
           }
        },
        {
            $limit:1
        }
    ]
)

q5::Write a query to find the top 3 drivers who have earned the most from fares. Return the drivers' ids and total earnings.
Ans:: db.Rides.aggregate(
    [
        {
            $lookup:{
                from:"Drivers",
                localField:"driver_id",
                foreignField:"_id",
                as:"driversDetails"
            }
        },
        {
            $unwind:"$driversDetails"
            
        },
        {
            $group:{
                _id:"$driver_id",
                "total_earning":{$sum:"$fare" }
            }
        }

    ]
)

q7::Write a query to find all rides where the end_location is not set.
Ans:: db.Rides.find({"end_location}:null)